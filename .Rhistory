getURL2 <- GET(URL2)
getURL3 <- GET(URL3)
getURL1
getURL2
getURL3
q()
library(magrittr)
library(rvest)
# Yahoo Stock Rank Parser
yahooStockRankParser <- function(n){
if (n>100){
print("Parameter n should be a number between 1 and 100")
}else if (n<=0){
print("Parameter n should be a number between 1 and 100")
}else if (n%%1!=0){
print("Parameter n should be an integer")
}else{
URL <- "https://tw.stock.yahoo.com/d/i/rank.php?t=pri&e=tse&n=100"
xpathRank <- "//table[2]/tbody/tr/td[1]"
xpathStock <- "//tbody/tr/td[@class='name']"
xpathPrice <- "//table[2]/tbody/tr/td[3]"
doc <- read_html(URL, encoding="cp950")
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockTmp <- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to local environment
stockDF <<- head(stockTmp, n)
}
}
yahooStockRankParser(n=55)
# Yahoo Stock Rank Parser
yahooStockRankParser <- function(n){
if (n>100){
print("Parameter n should be a number between 1 and 100")
}else if (n<=0){
print("Parameter n should be a number between 1 and 100")
}else if (n%%1!=0){
print("Parameter n should be an integer")
}else{
URL <- "https://tw.stock.yahoo.com/d/i/rank.php?t=pri&e=tse&n=100"
xpathRank <- "//table[2]/tbody/tr/td[1]"
xpathStock <- "//tbody/tr/td[@class='name']"
xpathPrice <- "//table[2]/tbody/tr/td[3]"
doc <- read_html(URL, encoding="cp950")
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockTmp <- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to local environment
stockDF <- head(stockTmp, n)
}
}
yahooStockRankParser(n=55)
rm(stockDF)
yahooStockRankParser <- function(n){
if (!n %in% 1:100){
print("Parameter n should be a number between 1 and 100")
}else{
URL <- "https://tw.stock.yahoo.com/d/i/rank.php?t=pri&e=tse&n=100"
xpathRank <- "//table[2]/tbody/tr/td[1]"
xpathStock <- "//tbody/tr/td[@class='name']"
xpathPrice <- "//table[2]/tbody/tr/td[3]"
doc <- read_html(URL, encoding="cp950")
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockTmp <- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to local environment
stockDF <- head(stockTmp, n)
}
}
yahooStockRankParser(n=55)
# Yahoo Stock Rank Parser
yahooStockRankParser <- function(n){
if (!n %in% 1:100){
print("Parameter n should be a number between 1 and 100")
}else{
URL <- "https://tw.stock.yahoo.com/d/i/rank.php?t=pri&e=tse&n=100"
xpathRank <- "//table[2]/tbody/tr/td[1]"
xpathStock <- "//tbody/tr/td[@class='name']"
xpathPrice <- "//table[2]/tbody/tr/td[3]"
doc <- read_html(URL, encoding="cp950")
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockTmp <- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to local environment
stockDF <- head(stockTmp, n)
assign('stockDF',stockDF,envir=.GlobalEnv)
}
}
yahooStockRankParser(n=55)
yahooStockRankParser(n=49)
yahooStockRankParser(n=51)
q()
install.packages("pixmap")
library(pixmap)
onePiece <- read.pnm("c:/NTUTrainRL1/image/onePiece.pgm")#把圖片指派給onePiece這個物件
onePiece#看看onePiece物件
plot(onePiece)#把onePiece物件畫出來看看
URL <- "https://tw.stock.yahoo.com/d/i/rank.php?t=pri&e=tse&n=100"
xpathRank <- "//table[2]/tbody/tr/td[1]"
xpathStock <- "//tbody/tr/td[@class='name']"
xpathPrice <- "//table[2]/tbody/tr/td[3]"
doc <- read_html(URL, encoding="cp950")
library(rvest)
library(magrittr)
doc <- read_html(URL, encoding="cp950")
doc
rank <- doc %>%
html_nodes(.,xpath = xpathRank)
rank
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
rank
yahooStockRankParser <- function(n){
if (!n %in% 1:100){
print("Parameter n should be a number between 1 and 100")
}else{
URL <- "https://tw.stock.yahoo.com/d/i/rank.php?t=pri&e=tse&n=100"
xpathRank <- "//table[2]/tbody/tr/td[1]"
xpathStock <- "//tbody/tr/td[@class='name']"
xpathPrice <- "//table[2]/tbody/tr/td[3]"
doc <- read_html(URL, encoding="cp950")
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockTmp <- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to local environment
stockDF <- head(stockTmp, n)
assign('stockDF',stockDF,envir=.GlobalEnv)
}
}
yahooStockRankParser(n=20)
View(stockDF)
Sys.setlocale(category="LC_ALL", locale="cht")
yahooStockRankParser(n=20)
View(stockDF)
onePiece <- read.pnm("c:/NTUTrainRL1/image/onePiece.pgm")#把圖片指派給onePiece這個物件
onePiece#看看onePiece物件
plot(onePiece)#把onePiece物件畫出來看看
onePiece@grey[300, 600]#看一下(300, 600)這個像素的亮度
locator()#這是R的內建函式，可以找到圖片坐標
noUsopp@grey[69.95408:310.19518, 203.237:314.3169] <- 1#把騙人布用國防布蓋掉
noUsopp <- onePiece
noUsopp@grey[69.95408:310.19518, 203.237:314.3169] <- 1#把騙人布用國防布蓋掉
plot(noUsopp)#看看結果，好像沒有蓋好蓋滿QQ
library(sqldf)
install.packages("sqldf")
library(sqldf)
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- as.numeric(c(500000000, 320000000, 66000000, NA))
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
strawHatPirate6 <- sqldf("select name, occupation, bounty, age from strawHatPirate where age>17 order by bounty asc")
View(strawHatPirate6)
strawHatPirate6 <- sqldf("select name, occupation, bounty, age from strawHatPirate where age>19 order by bounty asc")
View(strawHatPirate6)
sqldf("select avg(age) as avgAge from strawHatPirate")
View(strawHatPirate)
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- as.numeric(c(500000000, 320000000, 66000000, NA))
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
gender <- c("Male", "Male", "Female", "Male")
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, gender, stringsAsFactors=FALSE)
View(strawHatPirate)
sqldf("select avg(age) as avgAge from strawHatPirate group by gender")
sqldf("select gender, avg(age) as avgAge from strawHatPirate group by gender")
name2 <- c("Monkey D. Luffy", "Tony Tony Chopper", "Nico Robin", "Brook")
devilFruit <- c("Rubber", "Human", "Flower", "Underworld")
devilFruitList <- data.frame(name2, devilFruit, stringsAsFactors=FALSE)
sqldf("select strawHatPirate.name, devilFruitList.devilFruit from strawHatPirate inner join devilFruitList on strawHatPirate.name=devilFruitList.name2")
sqldf("select strawHatPirate.name, strawHatPirate.occupation, devilFruitList.devilFruit from strawHatPirate left join devilFruitList on strawHatPirate.name=devilFruitList.name2")
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
gender <- c("Male", "Male", "Female", "Male")
strawHatPirate7 <- cbind(strawHatPirate, gender)#新增性別欄位
library(plyr)#載入plyr套件
avgBountyByGender <- ddply(strawHatPirate7, c("gender"), function(df)round(mean(df$bounty, na.rm=T),2))#寫法1
avgBountyByGender
avgAgeByGender <- ddply(strawHatPirate7, c("gender"), summarise, avgAge=round(mean(age),2))#寫法2
avgBountyByGender
avgAgeByGender
library(reshape2)
install.packages("reshape2")
View(strawHatPirate)
strawHatPirate8 <- melt(strawHatPirate, id=c("name"), measure=c("strength", "intelligence"))
library(reshape2)
strawHatPirate8 <- melt(strawHatPirate, id=c("name"), measure=c("strength", "intelligence"))
View(strawHatPirate8)
strawHatPirate9 <- dcast(strawHatPirate8, name~variable)
View(strawHatPirate9)
f <- function(x){
answer <- 5*x
return(answer)
}
g <- function(x){
answer <- x+10
return(answer)
}
f(2)#5x
g(f(2))#5x+10
library(magrittr)
2 %>% f#5x
2 %>% f %>% g#5x+10
2 %>% f#5x
2 %>% f %>% g#5x+10
pythagorean(3, 4)
pythagorean <- function(a, b){
c <- sqrt(a^2 + b^2)
return(c)
}
pythagorean(3, 4)
3 %>% pythagorean(.,4)
3 %>% pythagorean(4)
pythagorean(5, 12)
12 %>% pythagorean(5,.)
pythagorean <- function(a, b){
sqrt(a^2 + b^2)
}
pythagorean(3, 4)
3 %>% pythagorean(.,4)
pythagorean(5, 12)
12 %>% pythagorean(5,.)
vector1 <- 1:100
mean(vector1)
meanFunction <- function(input){
inputLength <- length(input)
avg <- sum(input)/inputLength
return(avg)
}
meanFunction(vector1)
vector1 %>% meanFunction()#forward-pipe
vector1 %>% meanFunction#forward-pipe
min(vector1)
?sort
minimumFunction <- function(input){
result <- sort(input, decreasing=FALSE)[1]
return(result)
}
vector1 <- 10:100
minimumFunction(vector1)
trapezium <- function(upper, bottom, height=10){
area <- (upper+bottom)*height/2
return(area)
}
trapezium(5, 7)#依照順序
trapezium(height=100, bottom=7, upper=5)#可以改預設, 依命名
trapezium(5, 7)#依照順序
5 %>% trapezium(., 7)#forward-pipe
7 %>% trapezium(height=100, bottom=., upper=5)
x <- 1:10
for (index in x){
print(index^2)
}
nestDemo <- matrix(numeric(), nrow=3, ncol=3)#創造一個3X3的空矩陣
nestDemo
dim(nestDemo)
for (index1 in 1:dim(nestDemo)[1]){
for (index2 in 1:dim(nestDemo)[2]){
nestDemo[index1, index2] <- index1*index2
}
}
nestDemo
index <- 1
while(index<=10){
print(index <- index+1)
}
index <- 1
while(TRUE){
print(index <- index+1)
if (index>10) break
}
circleCalculate <- function(radius, areaCal=TRUE){
circleArea <- pi*(radius^2)
circleCircum <- 2*pi*radius
if (areaCal==TRUE){
return(circleArea)
} else {
return(circleCircum)
}
}
circleCalculate(3)#預設計算圓面積
circleCalculate(areaCal=FALSE, radius=3)#areaCal=FALSE計算圓周
areaCal=FALSE %>% circleCalculate(3, .)
FALSE %>% circleCalculate(3, .)
cubeCalculate <- function(sideLength, volumeCal){
volume <- sideLength^3
surface <- 6*(sideLength^2)
totalSideLength <- 12*sideLength
if (volumeCal==1){
return(volume)
} else if (volumeCal==2){
return(surface)
} else if (volumeCal==3){
return(totalSideLength)
}
}
cubeCalculate(3, 1)#算體積3^3=27
cubeCalculate(3, 2)#算表面積(3^2)*6=54
cubeCalculate(3, 3)#算總邊長12*3=36
countOdd <- function(x){
count <- 0
for(index in x){
if(index %% 2 ==1){
count <- count+1
}
}
return (count)
}
countOdd(c(1:9))#計算1~9有幾個奇數
countOdd(c(1:100))#計算1~9有幾個奇數
countOdd(c(1:1000))#計算1~9有幾個奇數
countOdd(c(1:9))#計算1~9有幾個奇數
matrix <- matrix(1:8, nrow=2)#創造一個2*4的矩陣做範例
matrix
sumRow <- apply(matrix, 1, sum)#把sum應用到各列
sumRow
sumColumn <- apply(matrix, 2, sum)#把sum應用到各欄
sumColumn
meanRow <- apply(matrix, 1, mean)#把mean應用到各列
meanRow
meanColumn <- apply(matrix, 2, mean)#把mean應用到各欄
meanColumn
maximum <- function(x){
result <- sort(x, decreasing=TRUE)[1]
return(result)
}
maxRow <- apply(matrix, 1, maximum)#把maximum應用到各列
maxColumn <- apply(matrix, 2, maximum)#把maximum應用到各欄
maxRow
maxColumn
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(which.max(distance))
}
return(apply(x, 1, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,50,1,60), nrow=3, byrow=TRUE)
salesMatrix
findOutliers(salesMatrix)#告訴你第一列的第三個元素、第二列的第一個、第三列的第二個元素是極端值
list1 <- list(1:5, 11:15)#創造一個包含兩個vector的list
list1
lapply(list1, median)#應用median函數到list1
sapply(list1, median)#應用median函數到list1
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- c(500000000, 320000000, 66000000, NA)
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
strawHatPirate$birthdayAsDate <- as.Date(strawHatPirate$birthday, "%m/%d/%Y")#Y for 4-digit, y for 2-digit
View(strawHatPirate)
strawHatPirate <- strawHatPirate[ ,-5]
lapply(strawHatPirate, sort)#對每個變數都應用sort函數
practice <- lapply(strawHatPirate, sort)
practice[1]
practice[4]
practice[4][1]
practice[[4]]
max(practice[[4]])
status <- factor(c("Poor", "Improved", "Excellent", "Poor", "Excellent"))
age <- c(20, 33, 55, 72, 61)
tapply(age, status, mean)
q()
Sys.getlocale()
Sys.setlocale(category = "LC_ALL", locale = "cht")#csv檔是繁體中文
accidentList <- read.csv("data/funCoastAccident.csv", header=TRUE, sep=",")
setwd("C:/NTUTrainRL1")
accidentList <- read.csv("data/funCoastAccident.csv", header=TRUE, sep=",")
head(accidentList)#看看前6筆資料
str(accidentList)#看看資料集結構
View(accidentList)
accidentList <- read.csv("data/funCoastAccident.csv", header=TRUE, sep=",", row.names="編號", colClasses=c("character", "character", "character", "character", "character", "integer", "factor", "factor"))
colnames(accidentList) <- c("county", "hospital", "gender", "nationality", "age", "woundType1", "woundType2")
View(accidentList)
str(accidentList)
rm(accidentList)
library(xlsx)
install.packages("xlsx")
library(xlsx)
accidentList <- read.xlsx("C:/NTUTrainRL1/data/funCoastAccident.xlsx", 1, encoding = "UTF-8")#encoding issue here
View(accidentList)
install.packages("Hmisc")
library(Hmisc)
datadir <- "C:/NTUTrainRL1/data"
sasexe <- "C:/Program Files/SASHome/SASFoundation/9.4/sas.exe"
accidentList <- sas.get(libraryName=datadir, member="funcoastaccident", sasprog=sasexe)
View(accidentList)
library(magrittr)
library(httr)
library(rvest)
library(stringr)
Sys.setlocale(category = "LC_ALL", locale = "")
area <- "新北市"
URLencode(area)
Sys.setlocale(category = "LC_ALL", locale = "")
area <- "新北市"
url <- sprintf("http://www.etwarm.com.tw/object_list.php?area=%s",URLencode(area))#把URLencode(area)代入%s
# Get the max index看總共有幾頁要爬
max_index <- read_html(url) %>%
html_nodes(.,xpath = "//div[@class='page']/a") %>% #使用xpath helper
html_text %>% #Extract contents inside tags取標籤中的內容
str_extract(.,"[0-9]+") %>% #使用Regular expression把數字抓出來
as.integer %>% #化成整數
max(.,na.rm = TRUE) #取最大值
urls <- sprintf("http://www.etwarm.com.tw/object_list?area=%s&page=", URLencode(area))
urls <- paste0(urls, 1:max_index)#concatenate and remove blank
head(urls)
tail(urls)
for (i in 1:3) {
etwarm <- read_html(urls[i])
district <- etwarm %>%
html_nodes(.,xpath = "//li[@class='obj_item']/div[@class='obj_info']/h3/a") %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8") %>% # to compatible in Windows
str_extract(.,sprintf("%s.*區", area))# "台北市.*區"
price <- etwarm %>%
html_nodes(xpath = "//div[@class='price']") %>%
html_text %>%
str_replace_all(",", "") %>%
as.numeric()
temp <- data.frame(districtDF = district, priceDF = price * 10000)#還原單位
houses = rbind(houses, temp) #每抓一頁就往下append
Sys.sleep(abs(rnorm(1))) #不要一直抓
print(urls[i]) #告訴user這次抓了哪幾頁
}
houses <- data.frame()
for (i in 1:3) {
etwarm <- read_html(urls[i])
district <- etwarm %>%
html_nodes(.,xpath = "//li[@class='obj_item']/div[@class='obj_info']/h3/a") %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8") %>% # to compatible in Windows
str_extract(.,sprintf("%s.*區", area))# "台北市.*區"
price <- etwarm %>%
html_nodes(xpath = "//div[@class='price']") %>%
html_text %>%
str_replace_all(",", "") %>%
as.numeric()
temp <- data.frame(districtDF = district, priceDF = price * 10000)#還原單位
houses = rbind(houses, temp) #每抓一頁就往下append
Sys.sleep(abs(rnorm(1))) #不要一直抓
print(urls[i]) #告訴user這次抓了哪幾頁
}
Sys.setlocale(category = "LC_ALL", locale = "cht")
View(houses)
library(httr)
library(XML)
get_stores <- function(city, town) {
pcsc <- POST("http://emap.pcsc.com.tw/EMapSDK.aspx", body = list(commandid = "SearchStore", city = city, town = town))
stores <- xmlParse(content(pcsc, as = "text")) %>%
.["//GeoPosition"] %>%
xmlToDataFrame
return(stores)
}#從Firefox開發者介面觀察
storeDaan <- get_stores("台北市", "大安區")
View(storeDaan)
Sys.setlocale(category = "LC_ALL", locale = "")
area <- "新北市"
url <- sprintf("http://www.etwarm.com.tw/object_list.php?area=%s",URLencode(area))#把URLencode(area)代入%s
# Get the max index看總共有幾頁要爬
max_index <- read_html(url) %>%
html_nodes(.,xpath = "//div[@class='page']/a") %>% #使用xpath helper
html_text %>% #Extract contents inside tags取標籤中的內容
str_extract(.,"[0-9]+") %>% #使用Regular expression把數字抓出來
as.integer %>% #化成整數
max(.,na.rm = TRUE) #取最大值
q()
