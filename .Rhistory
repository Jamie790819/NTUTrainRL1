plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
name="民國103年政黨財務申報(具會計師簽證)",
type="bar",
color = c("blue", "green", "orange", "goldenrod")
)
plotlybp
plotlybp <- plot_ly(
x=partiesEn,
y=assetInMillionNTD,
name="民國103年政黨財務申報(具會計師簽證)",
type="bar",
color = c("blue", "green", "orange", "goldenrod")
)
plotlybp
plotlybp <- plot_ly(
x=partiesEn,
y=assetInMillionNTD,
name="民國103年政黨財務申報(具會計師簽證)",
type="bar",
)
plotlybp
plotlybp <- plot_ly(
x=partiesEn,
y=assetInMillionNTD,
name="民國103年政黨財務申報(具會計師簽證)",
type="bar"
)
plotlybp
plotlybp <- plot_ly(
x=partiesEn,
y=assetInMillionNTD,
type="bar"
)
plotlybp
plotlybp <- plot_ly(
x=partiesEn,
y=assetInMillionNTD,
type="bar",
color=partiesEn
)
plotlybp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
color=parties
)
plotlybp
plotlybp <- plot_ly(
x=partiesEn,
y=assetInMillionNTD,
type="bar",
color=partiesEn
)
plotlybp
q()
parties <- c("KMT", "DPP", "PFP", "TSU")
assetInMillionNTD <- c(25570, 479, 3, 21)
color <- c("blue", "green", "orange", "goldenrod")
partiesAsset <- data.frame(parties, assetInMillionNTD, color)
basebp <- barplot(partiesAsset$assetInMillionNTD, names.arg=partiesAsset$parties, col=color, cex.names=0.8, border=NA, ylim=c(0,30000), main=paste("民國103年政黨財務申報(具會計師簽證)","\n","單位:新台幣百萬元"), sub="資料來源:內政部民政司")
text(x=basebp, y=partiesAsset$assetInMillionNTD, label=partiesAsset$assetInMillionNTD, pos = 3, cex = 0.8)
ggplotbp <- ggplot(data=partiesAsset, aes(x=parties, y=assetInMillionNTD))+geom_bar(colour=NA, fill=c("green", "blue", "orange", "goldenrod"), width=.8, stat="identity")+ ggtitle(paste("民國103年政黨財務申報(具會計師簽證)","\n","單位:新台幣百萬元"))+ylab("")+xlab("資料來源:內政部民政司")+geom_text(aes(label=assetInMillionNTD), vjust = -0.5)
ggplotbp
library(ggplot2)
ggplotbp <- ggplot(data=partiesAsset, aes(x=parties, y=assetInMillionNTD))+geom_bar(colour=NA, fill=c("green", "blue", "orange", "goldenrod"), width=.8, stat="identity")+ ggtitle(paste("民國103年政黨財務申報(具會計師簽證)","\n","單位:新台幣百萬元"))+ylab("")+xlab("資料來源:內政部民政司")+geom_text(aes(label=assetInMillionNTD), vjust = -0.5)
ggplotbp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
color=parties
)
plotlybp
library(plotly)
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
color=parties
)
plotlybp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker = list(color = toRGB("blue", "green", "orange", "goldenrod"))
)
plotlybp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker = list(color = toRGB("blue"))
)
plotlybp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker = list(color = toRGB("blue", "green"))
)
plotlybp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker = list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod")))
)
plotlybp
layout_bar <- list(title = paste("民國103年政黨財務申報(具會計師簽證)","\n","單位:新台幣百萬元"),
xaxis = list(title = "資料來源:內政部民政司"),
yaxis = list(title = "")
)
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker = list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod"))),
kwargs = list(layout = layout_bar)
)
plotlybp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod"))),
title=paste("民國103年政黨財務申報(具會計師簽證)","\n","單位:新台幣百萬元")
)
plotlybp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod")))
)
plotlybp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod"))),
layout(xaxis = list(title = "資料來源:內政部民政司"), yaxis = list(title = "")
)
plotlybp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod"))),
layout(xaxis = list(title = "資料來源:內政部民政司"), yaxis = list(title = ""))
)
plotlybp
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod")))
)
plotlybp
layout_bar <- list(title = "民國103年政黨財務申報(具會計師簽證)",
xaxis = list(title = "資料來源:內政部民政司"),
yaxis = list(title = "")
)
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod")))
)
plotlybp%>%layout_bar
layout_bar <- list(title = "民國103年政黨財務申報(具會計師簽證)",
xaxis = list(title = "資料來源:內政部民政司"),
yaxis = list(title = "")
)
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod"))),
kwargs = list(layout = layout_bar)
)
xlabel <- list(title="資料來源:內政部民政司")
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod")))
)
plotlybp%>%layout(xaxis=xlabel)
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod")))
)
plotlybp %>% layout(xaxis="資料來源:內政部民政司")
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod")))
)
plotlybp %>%
layout(xaxis=list(title='Source: '),
yaxis=list(title=''),
title='Asset in NTD million'
)
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod")))
)
plotlybp %>%
layout(xaxis=list(title='資料來源:內政部民政司'),
yaxis=list(title=''),
title='Asset in NTD million'
)
plotlybp <- plot_ly(
x=parties,
y=assetInMillionNTD,
type="bar",
marker=list(color = c(toRGB("blue"), toRGB("green"), toRGB("orange"), toRGB("goldenrod")))
)
plotlybp %>%
layout(xaxis=list(title='Source: Department of Civil Affairs'),
yaxis=list(title=''),
title='Asset in NTD million'
)
library(treemap)
install.packages("treemap")
library(treemap)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, vColor = c("blue", "green", "orange", "goldenrod")
, type = "value")
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type = "value")
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type = "value"
, title= "Asset in NTD million")
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, title= "Asset in NTD million")
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, title= "Asset in NTD million"
, bg.labels=c("blue", "green", "orange", "goldenrod"))
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, vColor=factor(c("blue", "green", "orange", "goldenrod"))
, title= "Asset in NTD million"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="comp"
, title= "Asset in NTD million"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="dens"
, title= "Asset in NTD million"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="index"
, title= "Asset in NTD million"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="categorical"
, title= "Asset in NTD million"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="-RdGy"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="-BuGn"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="BuGn"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="GnBu"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="Greys"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="YlGnBu"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="GnBu"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="Set1"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="RdBu"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="Blues"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="OrRd"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="Purples"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="RdBu"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="BuPu"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="Purples"
)
tmPlot(partiesAsset
, index = "parties"
, vSize = "assetInMillionNTD"
, type="value"
, title= "Asset in NTD million"
, palette="RdBu"
)
q()
Sys.setlocale(category = "LC_ALL", locale = "cht")
![The Art of R Programming](http://freecomputerbooks.com/covers/The-Art-of-R-Programming-Matloff-Norman.jpg)
q()
q()
sessionInfo()
search()
library(vcd)
library("vcd")
install.packages(vcd)
install.packages("vcd")
search()
library(vcd)
search()
installed.packages()
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.3/library")
numericVector <- c(1, 2, 5, 3, 6, -2, 4)#數字Vector
characterVector <- c("one", "two", "three")#文字Vector
logicalVector <- c(TRUE, TRUE, TRUE, FALSE, TRUE, FALSE)#二元邏輯Vector
mixedVector <- c(1, "two", TRUE)#文字Vector
class(mixedVector)#檢查mixedVector的類別
class(numericVector)
seq(from=12, to=90, by=3)#產生一個從12到90公差為3的向量, as in sequence
seq(from=100, to=1000, length=10)#產生一個從100到1000，Scalar個數為10的向量
rep(9,5)#產生一個有5個9的向量, as in repetition
head(mtcars)
names(mtcars)#把mtcars的欄位名抓出來
colNames <- names(mtcars)#把mtcars的欄位名抓出來
class(colNames)
for (index in 1:length(colNames)){
print(colNames[index])
}
status <- c("Poor", "Improved", "Excellent", "Poor")
statusF <- factor(status)
class(statusF)
statusF
?factor
vector <- c(1:12)#這裡也可以使用seq(1:12), seq as in sequence
matrix <- matrix(vector, nrow=4, ncol=3, byrow=TRUE)#預設byrow是FALSE
matrix#把matrix印出來看看
matrix[1,]#取出matrix中的第一列
matrix[,2]#取出matrix中的第二欄
matrix[3,3]#取出matrix中位於第三列第三欄的元素
install.packages("pixmap")#這個範例需要使用pixmap套件
library(pixmap)
onePiece <- read.pnm("image/onePiece.pgm")#把圖片指派給onePiece這個物件
getwd()
setwd(C:/NTUTrainRL1)
setwd(C:\NTUTrainRL1)
setwd(C:/NTUTrainRL1)
setwd("C:/")
setwd("C:/NTUTrainRL1")
onePiece <- read.pnm("image/onePiece.pgm")#把圖片指派給onePiece這個物件
onePiece
plot(onePiece)#把onePiece物件畫出來看看
str(onePiece)#檢查onePiece物件的結構
onePiece@grey[300, 600]#看一下(300, 600)這個像素的亮度
locator()#這是R的內建函式，可以找到圖片坐標
noUsopp@grey[68.91861:301.05464, 219.0638:311.9182] <- 1#把騙人布用國防布蓋掉
noUsopp <- onePiece
noUsopp@grey[68.91861:301.05464, 219.0638:311.9182] <- 1#把騙人布用國防布蓋掉
plot(noUsopp)#看看結果，好像沒有蓋好蓋滿QQ
x <- c("X1", "X2")#每個matrix都有2列
y <- c("Y1", "Y2", "Y3")#每個matrix都有3欄
z <- c("Z1", "Z2", "Z3", "Z4")#有4個matrix
array <- array(1:24, c(2, 3, 4), dimnames=list(x, y, z))
array#把array印出來看看
array[1, , ]#取出四個matrice的第一列
array[ ,2, ]#取出四個matrice的第二欄
patientID <- c("P01", "P02", "P03", "P04")
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
patientData <- data.frame(patientID, age, diabetes, status)
View(patientData)
patientData[1:2]#把patientData第一與第二欄取出來
patientData$age#把patientData中的age變數取出來
patientData[c("patientID", "age")]#把patientData第一與第二欄取出來
patientData$age[1]#把patientData第二欄的第一筆資料取出來
table(patientData$diabetes, patientData$status)#針對其中2個變數作樞紐分析表
summary(patientData$age)#把age變數的描述性統計印出來
summary(patientData)
attach(patientData)
summary(age)
detach(patientData)
with(patientData,{
summary(age)
})
length(mtcars)#mtcars有多少個欄位
length(patientData)#mtcars有多少個欄位
dim(mtcars)#mtcars有幾列幾欄as in dimension
dim(patientData)#mtcars有幾列幾欄as in dimension
str(mtcars)#as in structure檢視mtcars的結構
names(mtcars)[9]#檢視mtcars的第九個欄位名稱
g <- "My First List"
h <- c(25, 26, 18, 39)
j <- matrix(1:10, nrow=5)
k <- c("one", "two", "three")
myList <- list(title=g, ages=h, j, k)
myList#把mylist印出來看看
naExample <- c(88, NA, 12, 92, 33)
nullExample <- c(88, NULL, 12, 92, 33)
mean(naExample)#無法運算
mean(naExample, na.rm=T)
mean(nullExample)
q()
